// Code generated by mojo. DO NOT EDIT.
// Rerunning mojo will overwrite this file.
//
// Copyright 2021 Mojo-lang.org
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package http

import (
	"strconv"
)

var SameSiteNames = map[int32]string{
	0: "unsepecified",
	1: "lax",
	2: "strict",
	3: "none",
}

var SameSiteValues = map[string]SameSite{
	"unsepecified": SameSite_SAME_SITE_UNSEPECIFIED,
	"lax":          SameSite_SAME_SITE_LAX,
	"strict":       SameSite_SAME_SITE_STRICT,
	"none":         SameSite_SAME_SITE_NONE,
}

func (x SameSite) Format() string {
	s, ok := SameSiteNames[int32(x)]
	if ok {
		return s
	}
	if int(x) == 0 {
		return "unspecified"
	}
	return strconv.Itoa(int(x))
}

func (x SameSite) ToString() string {
	return x.Format()
}

func (x *SameSite) Parse(value string) error {
	if x != nil {
		s, ok := SameSiteValues[value]
		if ok {
			*x = s
		} else {
			*x = SameSite_SAME_SITE_UNSEPECIFIED
		}
	} else {
		*x = SameSite_SAME_SITE_UNSEPECIFIED
	}
	return nil
}

func ParseSameSite(value string) (SameSite, error) {
	var v SameSite
	if err := (&v).Parse(value); err != nil {
		return v, err
	}
	return v, nil
}
